#!/bin/bash
ANS="yourappname"
ADL="repohost:/var/www/html/pub/eptrepo"
HNL="xxx.xxx.xxx.xxx,yyy.yyy.yyy.yyy"

function launchLoadGen {
	WDL=$(dirname ${0})
	BPN=$(basename ${0})
	IPA=$(hostname -I)
	cd ./target/jmeter/bin
	java -server -XX:+HeapDumpOnOutOfMemoryError -Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m  -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:G1ReservePercent=20 -Djava.security.egd=file:/dev/urandom -Duser.language=en -Duser.region=EN -Dsun.rmi.loader.logLevel=verbose -jar ApacheJMeter-4.0.jar -Jserver.rmi.localport=18099 -Jmode=Asynch -Jasynch.batch.queue.size=8000 -Jtime_threshold=1000 -s -j ../../jmeter-server.log
}

function launchLoadGen_nonJenkins {
	IPA=$(hostname -I)
	cd ./bin
	java -server -XX:+HeapDumpOnOutOfMemoryError -Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m  -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:G1ReservePercent=20 -Djava.security.egd=file:/dev/urandom -Duser.language=en -Duser.region=EN -Dsun.rmi.loader.logLevel=verbose -jar ApacheJMeter-4.0.jar -Jserver.rmi.localport=18099 -Jmode=Asynch -Jasynch.batch.queue.size=8000 -Jtime_threshold=1000 -s -j ../jmeter-server.log
}

function launchController {
	RTS="$(date +'%Y%m%d')"
	TTS="${RTS}_$(date +'%H%M%S')"
	JWD="$(pwd)"
	JTD="${JWD}/target/jmeter"
#	JTF="${JTD}/testFiles/${ANS}.jmx"
	JTF="${JWD}/src/test/jmeter/${ANS}.jmx"
	if [ -d "${JTD}/bin" ]; then
		rm -rf ${JTD}/results/*
		cd ${JTD}/bin
		java -Xms512M -Xmx512M -Dsun.rmi.loader.logLevel=verbose -jar ApacheJMeter-4.0.jar -n -r -Jremote_hosts="${HNL}" -Jasynch.batch.queue.size=8000 -Jtime_threshold=1000 -X -d ${JTD} -e -j ${JTD}/logs/${ANS}.jmx.log -l ${JTD}/results/${RTS}-${ANS}.csv -o ${JTD}/reports/${ANS}_${TTS} -t ${JTF}
	fi
}

function launchController_nonJenkins {
	RTS="$(date +'%Y%m%d')"
	TTS="${RTS}_$(date +'%H%M%S')"
	JWD="$(pwd)"
#	JTD="${JWD}/target/jmeter"
	JTD="${JWD}/target"
	if [ -d "${JWD}/bin" ]; then
		rm -rf ${JTD}/results/*
		cd ${JWD}/bin
		java -Xms512M -Xmx512M -Dsun.rmi.loader.logLevel=verbose -jar ApacheJMeter-4.0.jar -n -r -Jremote_hosts="${HNL}" -Jasynch.batch.queue.size=8000 -Jtime_threshold=1000 -X -d ${JWD} -e -j ${JTD}/logs/${ANS}.jmx.log -l ${JTD}/results/${RTS}-${ANS}.csv -o ${JTD}/reports/${ANS}_${TTS} -t ${JTD}/${ANS}.jmx
	fi
}

function syncRepo {
#	Jenkins-friendly ...
	rsync -rltDOi --exclude='*.swp' ${ADL}/jmeter/ ./target/jmeter/
	rsync -rltDOi --exclude='*.swp' ${ADL}/${ANS}/ ./target/
#	Non-Jenkins ...
#	rsync -rltDOi --exclude='*.swp' ${ADL}/jmeter/ ./
#	rsync -rltDOi --exclude='*.swp' ${ADL}/bin/ ${HOME}/bin/
}

if [ "${1}" == "sync" ]; then
	syncRepo
elif [ "${1}" == "controller" ]; then
	launchController
elif [ "${1}" == "loadgen" ]; then
	launchLoadGen
else
	echo "ERR - no valid op provided"
fi
